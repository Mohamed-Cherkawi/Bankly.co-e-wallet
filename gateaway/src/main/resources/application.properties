spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always
spring.datasource.url=jdbc:postgresql://localhost:5432/auth-gateway-mic
spring.datasource.username=postgres
spring.datasource.password=post2002@
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql= true
#include the exception in the response
server.error.include-exception=true
server.error.include-message=always

server.error.include-binding-errors=always

#server port
server.port=9010

# Eureka Config
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.application.name=gateaway

logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator = INFO
logging.level.org.springframework.cloud.gateway = TRACE

#This will tell Spring to use a reactive model for handling web requests, which is compatible with Spring Cloud Gateway.
spring.main.web-application-type=reactive
spring.main.allow-bean-definition-overriding=true
# ************** Defining Routes ***************
# Product Service Route
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri.=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product
#spring.cloud.gateway.routes[0].filters[0].=securityFilterChain



# Product Service Route
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri.=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order